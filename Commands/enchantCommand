package me.ModMakerGroup.SM.Commands;

import java.util.HashMap;
import java.util.Map;

import me.ModMakerGroup.SM.ServerManager;

import org.bukkit.command.Command;
import org.bukkit.command.CommandExecutor;
import org.bukkit.command.CommandSender;
import org.bukkit.enchantments.Enchantment;
import org.bukkit.entity.Player;
import org.bukkit.inventory.ItemStack;

public class enchantCommand implements CommandExecutor{

	ServerManager main;
	public enchantCommand(ServerManager sm) {
		this.main = sm;
	}
	Map<String, Enchantment> enchantment = new HashMap<String, Enchantment>();
	
	
	@Override
	public boolean onCommand(CommandSender cs, Command cmd, String label, String[] args) {
		if (cmd.getName().equalsIgnoreCase("enchant")) {
			if (cs instanceof Player) {
				Player p = (Player)cs;
				if (p.hasPermission("sm.enchant")) {
					if (args.length == 0) {
						p.sendMessage("§cUsage: /enchant <enchanttyps> <enchantlevel>");
						p.sendMessage("§6Look at the DevBukkit Page for the enchanttyps!");
					}
					if (args.length == 1) {
						ItemStack is = p.getItemInHand();
						if (!this.enchantment.containsKey(args[0])) {
					          p.sendMessage(ServerManager.prefix + "§cEnchantment not found.");
					          return true;
					        }
					        Enchantment e = (Enchantment)this.enchantment.get(args[0]);
					        if (e.canEnchantItem(is)) {
					            is.addEnchantment((Enchantment)this.enchantment.get(args[0]), 1);
					            p.sendMessage(ServerManager.prefix + "§6Item enchanted to level 1!");
					            return true;
					        }

					        p.sendMessage(ServerManager.prefix + "§cCannot enchant item.");
					        return true;
					}
					if (args.length == 2) {
					      ItemStack is = p.getItemInHand();

					      if (!this.enchantment.containsKey(args[0])) {
					        p.sendMessage(ServerManager.prefix + "§cEnchantment not found.");
					        return true;
					      }
					      Enchantment e = (Enchantment)this.enchantment.get(args[0]);
					      if (e.canEnchantItem(is)) {
					        int max = e.getMaxLevel();
					        int current = Integer.parseInt(args[1]);
					        if (current > max) {
					          current = max;
					          is.addEnchantment((Enchantment)this.enchantment.get(args[0]), current);
					          p.sendMessage(ServerManager.prefixb + "§7Item enchanted to max level.");
					          return true;
					        }
					        is.addEnchantment((Enchantment)this.enchantment.get(args[0]), current);
					        p.sendMessage(ServerManager.prefixb + "§7Item enchanted to level " + current + ".");
					        return true;
					      }

					      p.sendMessage(ServerManager.prefix + "§cCannot enchant item.");
					      return true;
					}
				}else{
					p.sendMessage(ServerManager.prefix + ServerManager.KeineRechte);
				}
			}
		}
		return true;
	}

	  public void setEnchantments() {
		    this.enchantment.put("aquaaffinity", Enchantment.WATER_WORKER);
		    this.enchantment.put("waterworker", Enchantment.WATER_WORKER);
		    this.enchantment.put("water_worker", Enchantment.WATER_WORKER);
		    this.enchantment.put("silktouch", Enchantment.SILK_TOUCH);
		    this.enchantment.put("silk_touch", Enchantment.SILK_TOUCH);
		    this.enchantment.put("projectileprotection", Enchantment.PROTECTION_PROJECTILE);
		    this.enchantment.put("protectionprojectile", Enchantment.PROTECTION_PROJECTILE);
		    this.enchantment.put("protection_projetile", Enchantment.PROTECTION_PROJECTILE);
		    this.enchantment.put("fireprotection", Enchantment.PROTECTION_FIRE);
		    this.enchantment.put("protectionfire", Enchantment.PROTECTION_FIRE);
		    this.enchantment.put("protection_fire", Enchantment.PROTECTION_FIRE);
		    this.enchantment.put("protectionfall", Enchantment.PROTECTION_FALL);
		    this.enchantment.put("protection_fall", Enchantment.PROTECTION_FALL);
		    this.enchantment.put("featherfalling", Enchantment.PROTECTION_FALL);
		    this.enchantment.put("blastprotection", Enchantment.PROTECTION_EXPLOSIONS);
		    this.enchantment.put("protectionexplosions", Enchantment.PROTECTION_EXPLOSIONS);
		    this.enchantment.put("protection_explosions", Enchantment.PROTECTION_EXPLOSIONS);
		    this.enchantment.put("protection", Enchantment.PROTECTION_ENVIRONMENTAL);
		    this.enchantment.put("protectionenvironmental", Enchantment.PROTECTION_ENVIRONMENTAL);
		    this.enchantment.put("protection_environmental", Enchantment.PROTECTION_ENVIRONMENTAL);
		    this.enchantment.put("respiration", Enchantment.OXYGEN);
		    this.enchantment.put("oxygen", Enchantment.OXYGEN);
		    this.enchantment.put("looting", Enchantment.LOOT_BONUS_MOBS);
		    this.enchantment.put("lootbonusmobs", Enchantment.LOOT_BONUS_MOBS);
		    this.enchantment.put("loot_bonus_mobs", Enchantment.LOOT_BONUS_MOBS);
		    this.enchantment.put("fortune", Enchantment.LOOT_BONUS_BLOCKS);
		    this.enchantment.put("lootbonusblocks", Enchantment.LOOT_BONUS_BLOCKS);
		    this.enchantment.put("loot_bonus_blocks", Enchantment.LOOT_BONUS_BLOCKS);
		    this.enchantment.put("knockback", Enchantment.KNOCKBACK);
		    this.enchantment.put("fire_aspect", Enchantment.FIRE_ASPECT);
		    this.enchantment.put("fireaspect", Enchantment.FIRE_ASPECT);
		    this.enchantment.put("unbreaking", Enchantment.DURABILITY);
		    this.enchantment.put("durability", Enchantment.DURABILITY);
		    this.enchantment.put("efficiency", Enchantment.DIG_SPEED);
		    this.enchantment.put("dig_speed", Enchantment.DIG_SPEED);
		    this.enchantment.put("digspeed", Enchantment.DIG_SPEED);
		    this.enchantment.put("smite", Enchantment.DAMAGE_UNDEAD);
		    this.enchantment.put("damageundead", Enchantment.DAMAGE_UNDEAD);
		    this.enchantment.put("damage_undead", Enchantment.DAMAGE_UNDEAD);
		    this.enchantment.put("baneofarthropods", Enchantment.DAMAGE_ARTHROPODS);
		    this.enchantment.put("damage_arthropods", Enchantment.DAMAGE_ARTHROPODS);
		    this.enchantment.put("damagearthropods", Enchantment.DAMAGE_ARTHROPODS);
		    this.enchantment.put("damagespider", Enchantment.DAMAGE_ARTHROPODS);
		    this.enchantment.put("sharpness", Enchantment.DAMAGE_ALL);
		    this.enchantment.put("damageall", Enchantment.DAMAGE_ALL);
		    this.enchantment.put("damage_all", Enchantment.DAMAGE_ALL);
		  }
}

